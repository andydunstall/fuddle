syntax = 'proto3';

option go_package = 'github.com/andydunstall/fuddle/pkg/rpc';

message RegisterRequest {
    // A unique identifier of the node in the cluster.
	string node_id = 1;
    // The type of service running on the node.
	string service = 2;
	// An identifier of the revision running on the node.
    string revision = 3;
	// Application defined state of the node.
	map<string, string> state = 4;
}

message RegisterResponse {
}

message UnregisterRequest {
    // A unique identifier of the node in the cluster.
	string node_id = 1;
}

message UnregisterResponse {
}

message NodesRequest {
}

message NodesResponse {
	repeated string ids = 1;
}

// Registry is a service that manges the set of nodes present in the cluster.
service Registry {
	rpc Register(RegisterRequest) returns (RegisterResponse);
	rpc Unregister(UnregisterRequest) returns (UnregisterResponse);
	rpc Nodes(NodesRequest) returns (NodesResponse);
}
