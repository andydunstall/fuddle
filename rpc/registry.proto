syntax = 'proto3';

option go_package = 'github.com/andydunstall/fuddle/pkg/rpc';

enum NodeUpdateType {
	JOIN = 0;
	LEAVE = 1;
	STATE = 2;
}

// Attributes contain the immutable information about the node.
message Attributes {
    // The type of service running on the node.
	string service = 1;
    // The location of the node in the cluster.
	string locality = 2;
	// An identifier of the revision running on the node.
    string revision = 3;
}

message NodeUpdate {
    // A unique identifier of the node in the cluster.
	string node_id = 1;
	NodeUpdateType update_type = 2;
	// attributes is only defined when the update_type is NODE_JOIN, since they
	// cannot be changed.
	Attributes attributes = 3;
	// state contains the application defined state which may be updated.
	// The contents of state vary based on the update type:
	// * NODE_JOIN: All the state must be included
	// * NODE_LEAVE: No state needs to be included
	// * NODE_STATE: Only the updated state must be included
	map<string, string> state = 4;
}

// Registry is a service that manges the set of nodes present in the cluster.
service Registry {
	// Register joins the cluster and streams updates.
	rpc Register(stream NodeUpdate) returns (stream NodeUpdate);
}
